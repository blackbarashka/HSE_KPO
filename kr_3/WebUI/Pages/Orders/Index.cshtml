@page
@model WebUI.Pages.Orders.IndexModel
@{
    ViewData["Title"] = "Мои заказы";
}

<div class="container mt-4">
    <div class="row">
        <div class="col">
            <h2>Мои заказы</h2>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Создать новый заказ</h5>
                    <form method="post">
                        <div class="mb-3">
                            <label for="amount" class="form-label">Сумма</label>
                            <input type="number" class="form-control" id="amount" name="Amount" min="1" value="100" required />
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Описание</label>
                            <input type="text" class="form-control" id="description" name="Description" value="Тестовый заказ" required />
                        </div>
                        <button type="submit" class="btn btn-primary">Создать заказ</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">@Model.ErrorMessage</div>
    }

    @if (Model.Orders == null || !Model.Orders.Any())
    {
        <div class="alert alert-info">У вас еще нет заказов.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped" id="orders-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Описание</th>
                        <th>Сумма</th>
                        <th>Статус</th>
                        <th>Дата создания</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.Orders)
                    {
                        <tr data-order-id="@order.Id">
                            <td>@order.Id</td>
                            <td>@order.Description</td>
                            <td>@order.Amount ₽</td>
                            <td>
                                <span class="badge bg-@GetStatusClass(order.Status)">@GetStatusText(order.Status)</span>
                            </td>
                            <td>@order.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>
                                <a class="btn btn-sm btn-info" href="/Orders/Details?orderId=@order.Id">Детали</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Функция для обновления статуса заказа в таблице
        window.updateOrderStatus = function(order) {
            const row = document.querySelector(`tr[data-order-id="${order.id}"]`);
            if (row) {
                const statusCell = row.querySelector('td:nth-child(4)');
                const statusText = getStatusText(order.status);
                const statusClass = getStatusClass(order.status);
                statusCell.innerHTML = `<span class="badge bg-${statusClass}">${statusText}</span>`;
            }
        };

        function getStatusText(status) {
            switch(status) {
                case "New": return "Новый";
                case "Processing": return "В обработке";
                case "Finished": return "Выполнен";
                case "Cancelled": return "Отменен";
                default: return status;
            }
        }

        function getStatusClass(status) {
            switch(status) {
                case "New": return "secondary";
                case "Processing": return "primary";
                case "Finished": return "success";
                case "Cancelled": return "danger";
                default: return "secondary";
            }
        }
    </script>
}

@functions {
    private string GetStatusClass(string status)
    {
        return status switch
        {
            "New" => "secondary",
            "Processing" => "primary",
            "Finished" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status switch
        {
            "New" => "Новый",
            "Processing" => "В обработке",
            "Finished" => "Выполнен",
            "Cancelled" => "Отменен",
            _ => status
        };
    }
}
